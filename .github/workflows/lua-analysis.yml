name: "Lua Analysis"

permissions:
  contents: read

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '33 12 * * 1'

jobs:
  analyze:
    name: Analyze Lua
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Fetch commits
      run: |
        git fetch origin ${{ github.base_ref }}
        git fetch origin ${{ github.sha }}

    - name: Check if tests should run (test/, infra/, *.lua)
      id: test_check
      run: |
        chmod +x infra/should_run_tests.sh
        bash infra/should_run_tests.sh ${{ github.base_ref }} ${{ github.sha }}
        exit_code=$?
        case $exit_code in
          0)
            echo "run_tests=true" >> $GITHUB_OUTPUT
            ;;
          1)
            echo "run_tests=false" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "Unexpected error occurred (exit code: $exit_code). Running tests to be safe."
            echo "run_tests=true" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Skip if no test/infra/.lua changes
      if: steps.test_check.outputs.run_tests == 'false'
      run: |
        echo "No test/infra/.lua changes. Skipping tests."
        exit 0

    - name: Cache Homebrew
      if: steps.test_check.outputs.run_tests == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Caches/Homebrew
          /usr/local/Homebrew
        key: ${{ runner.os }}-homebrew-${{ hashFiles('**/install.sh') }}
        restore-keys: |
          ${{ runner.os }}-homebrew-

    - name: Install Neovim
      if: steps.test_check.outputs.run_tests == 'true'
      run: |
        brew install neovim

    - name: Cache dependencies
      if: steps.test_check.outputs.run_tests == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/nvim
          ~/.config/nvim/plugin
          ~/.config/nvim/lazy
        key: ${{ runner.os }}-deps-${{ hashFiles('**/install.sh') }}
        restore-keys: |
          ${{ runner.os }}-deps-

    - name: Install dependencies
      if: steps.test_check.outputs.run_tests == 'true'
      run: |
        chmod +x infra/install.sh
        CI=true ./infra/install.sh

    - name: Update PATH
      if: steps.test_check.outputs.run_tests == 'true'
      run: |
        eval "$(/usr/libexec/path_helper)"

    - name: Cache Lua packages
      if: steps.test_check.outputs.run_tests == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ~/.luarocks
          ~/.cache/luarocks
        key: ${{ runner.os }}-luarocks-${{ hashFiles('**/install.sh') }}
        restore-keys: |
          ${{ runner.os }}-luarocks-

    - name: Run luacheck
      if: steps.test_check.outputs.run_tests == 'true'
      run: |
        luacheck lua/ after/plugin/ --codes --ranges --formatter plain 

    - name: Run Neovim sanity tests
      if: steps.test_check.outputs.run_tests == 'true'
      run: |
        bash infra/sanity_nvim_start.sh 
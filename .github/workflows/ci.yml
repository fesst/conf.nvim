name: "Master CI"

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  schedule:
    - cron: "33 12 * * 1"

# Set default permissions for all jobs
permissions:
  contents: read
  packages: read
  security-events: write

jobs:
  setup:
    uses: ./.github/workflows/setup-environment.yml
    with:
      setup_python: true
      setup_rust: true
      setup_node: true
      setup_lua: true

  test:
    name: Test
    needs: setup
    runs-on: macos-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Neovim
        run: brew install neovim
        shell: bash

      - name: Install packages
        run: |
          source ${{ needs.setup.outputs.virtual_env }}/bin/activate
          export VIRTUAL_ENV="${{ needs.setup.outputs.virtual_env }}"
          export PATH="$VIRTUAL_ENV/bin:$PATH"
          export PYTHONPATH="$VIRTUAL_ENV/lib/python3.12/site-packages:$PYTHONPATH"
          export PIP_TARGET="$VIRTUAL_ENV/lib/python3.12/site-packages"
          export PIP_PREFIX="$VIRTUAL_ENV"
          ./infra/install.sh

      - name: Run sanity tests
        run: |
          chmod +x infra/nvim_sanity_test.sh
          export VIRTUAL_ENV="${{ needs.setup.outputs.virtual_env }}"
          ./infra/nvim_sanity_test.sh
        env:
          CI: true
          NVIM_LOG_FILE: infra/nvim.log
        continue-on-error: false
        shell: bash

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            infra/nvim.log
            infra/test_files/checkhealth.log
          if-no-files-found: warn

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: actions
          config-file: ./.github/codeql/codeql-config.yml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:actions"

  lua-analysis:
    name: Lua Analysis
    needs: setup
    runs-on: macos-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Lua and LuaRocks
        run: |
          brew install lua luarocks
        shell: bash

      - name: Install luacheck
        run: |
          luarocks install luacheck
        shell: bash

      - name: Run luacheck
        run: |
          source ${{ needs.setup.outputs.virtual_env }}/bin/activate
          export VIRTUAL_ENV="${{ needs.setup.outputs.virtual_env }}"
          export PATH="$VIRTUAL_ENV/bin:$PATH"
          export PYTHONPATH="$VIRTUAL_ENV/lib/python3.12/site-packages:$PYTHONPATH"
          export PIP_TARGET="$VIRTUAL_ENV/lib/python3.12/site-packages"
          export PIP_PREFIX="$VIRTUAL_ENV"
          luacheck lua/ after/plugin/ --codes --ranges --formatter plain
        shell: bash
